generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  id       Int     @id @default(autoincrement())
  fullName String? @db.VarChar(255)
  email    String? @unique(map: "Admin_email_key") @db.VarChar(255)
  password String? @db.VarChar(255)
  active   String? @db.VarChar(3)
}

model employee {
  id       Int     @id @default(autoincrement())
  fullName String? @db.VarChar(255)
  email    String? @unique(map: "Employee_email_key") @db.VarChar(255)
  password String? @db.VarChar(255)
  active   String? @db.VarChar(3)
  game     game[]
}

model game {
  id              Int               @id @default(autoincrement())
  gameDate        DateTime?
  gameTime        DateTime?
  location        String?           @db.VarChar(255)
  active          String?           @db.VarChar(3)
  empId           Int?
  seasonId        String?
  awayTeamName    String?           @db.VarChar(255)
  homeTeamName    String?           @db.VarChar(255)
  employee        employee?         @relation(fields: [empId], references: [id], map: "Game_empId_fkey")
  season          season?           @relation(fields: [seasonId], references: [id], map: "Game_seasonId_fkey")
  gameofficial    gameofficial[]
  gameplayerstats gameplayerstats[]
  gameteamstats   gameteamstats[]

  @@index([empId], map: "Game_empId_fkey")
  @@index([seasonId], map: "Game_seasonId_fkey")
}

model gameofficial {
  id        Int      @id @default(autoincrement())
  role      String?
  position  String?
  officialId Int?
  gameId    Int?
  game      game?    @relation(fields: [gameId], references: [id], map: "GameOfficial_gameId_fkey")
  official   official? @relation(fields: [officialId], references: [id], map: "GameOfficial_officialId_fkey")

  @@index([gameId], map: "GameOfficial_gameId_fkey")
  @@index([officialId], map: "GameOfficial_officialId_fkey")
}

model gameplayerstats {
  id               Int     @id @default(autoincrement())
  goalsScored      Int?    @default(0)
  shotsOnTarget    Int?    @default(0)
  shotsOffTarget   Int?    @default(0)
  shotsTaken       Int?    @default(0)
  passesCompleted  Int?    @default(0)
  passesIncomplete Int?    @default(0)
  cornersTaken     Int?    @default(0)
  freeKicks        Int?    @default(0)
  redCards         Int?    @default(0)
  yellowCrads      Int?    @default(0)
  offSides         Int?    @default(0)
  fouls            Int?    @default(0)
  penalties        Int?    @default(0)
  penaltiesScored  Int?    @default(0)
  penaltiesMissed  Int?    @default(0)
  playerId         Int?
  gameId           Int?
  game             game?   @relation(fields: [gameId], references: [id], map: "GamePlayerStats_gameId_fkey")
  player           player? @relation(fields: [playerId], references: [id], map: "GamePlayerStats_playerId_fkey")

  @@index([gameId], map: "GamePlayerStats_gameId_fkey")
  @@index([playerId], map: "GamePlayerStats_playerId_fkey")
}

model gameteamstats {
  id                   Int   @id @default(autoincrement())
  goalsScored          Int?  @default(0)
  possessionPercentage Int?  @default(0)
  shotsOnTarget        Int?  @default(0)
  shotsOffTarget       Int?  @default(0)
  shotsTaken           Int?  @default(0)
  passesCompleted      Int?  @default(0)
  passesIncomplete     Int?  @default(0)
  cornersTaken         Int?  @default(0)
  freeKicks            Int?  @default(0)
  redCards             Int?  @default(0)
  yellowCrads          Int?  @default(0)
  offSides             Int?  @default(0)
  fouls                Int?  @default(0)
  penalties            Int?  @default(0)
  penaltiesScored      Int?  @default(0)
  penaltiesMissed      Int?  @default(0)
  teamId               Int?
  gameId               Int?
  game                 game? @relation(fields: [gameId], references: [id], map: "GameTeamStats_gameId_fkey")
  team                 team? @relation(fields: [teamId], references: [id], map: "GameTeamStats_teamId_fkey")

  @@index([gameId], map: "GameTeamStats_gameId_fkey")
  @@index([teamId], map: "GameTeamStats_teamId_fkey")
}

model leagueplayerstats {
  id               Int     @id @default(autoincrement())
  goalsScored      Int?    @default(0)
  shotsOnTarget    Int?    @default(0)
  shotsOffTarget   Int?    @default(0)
  shotsTaken       Int?    @default(0)
  passesCompleted  Int?    @default(0)
  passesIncomplete Int?    @default(0)
  cornersTaken     Int?    @default(0)
  freeKicks        Int?    @default(0)
  redCards         Int?    @default(0)
  yellowCrads      Int?    @default(0)
  offSides         Int?    @default(0)
  fouls            Int?    @default(0)
  penalties        Int?    @default(0)
  penaltiesScored  Int?    @default(0)
  penaltiesMissed  Int?    @default(0)
  playerId         Int?
  player           player? @relation(fields: [playerId], references: [id], map: "LeaguePlayerStats_playerId_fkey")

  @@index([playerId], map: "LeaguePlayerStats_playerId_fkey")
}

model leagueteamstats {
  id                   Int   @id @default(autoincrement())
  goalsScored          Int?  @default(0)
  possessionPercentage Int?  @default(0)
  shotsOnTarget        Int?  @default(0)
  shotsOffTarget       Int?  @default(0)
  shotsTaken           Int?  @default(0)
  passesCompleted      Int?  @default(0)
  passesIncomplete     Int?  @default(0)
  cornersTaken         Int?  @default(0)
  freeKicks            Int?  @default(0)
  redCards             Int?  @default(0)
  yellowCrads          Int?  @default(0)
  offSides             Int?  @default(0)
  fouls                Int?  @default(0)
  penalties            Int?  @default(0)
  penaltiesScored      Int?  @default(0)
  penaltiesMissed      Int?  @default(0)
  teamId               Int?
  draws                Int?  @default(0)
  losses               Int?  @default(0)
  wins                 Int?  @default(0)
  team                 team? @relation(fields: [teamId], references: [id], map: "LeagueTeamStats_teamId_fkey")

  @@index([teamId], map: "LeagueTeamStats_teamId_fkey")
}

model official {
  id           Int            @id @default(autoincrement())
  fullName     String?        @db.VarChar(255)
  active       String?        @db.VarChar(3)
  gameofficial gameofficial[]
}

model player {
  id                Int                 @id @default(autoincrement())
  fullName          String?             @db.VarChar(255)
  age               Int?
  height            Int?
  weight            Int?
  nationality       String?             @db.VarChar(255)
  status            String?             @db.VarChar(20)
  position          String?             @db.VarChar(50)
  teamId            Int?
  gameplayerstats   gameplayerstats[]
  leagueplayerstats leagueplayerstats[]
  team              team?               @relation(fields: [teamId], references: [id], map: "Player_teamId_fkey")
  seasonplayerstats seasonplayerstats[]

  @@index([teamId], map: "Player_teamId_fkey")
}

model season {
  id                String              @id
  startingDate      DateTime?
  endingDate        DateTime?
  game              game[]
  seasonplayerstats seasonplayerstats[]
  seasonteamstats   seasonteamstats[]
}

model seasonplayerstats {
  id               Int     @id @default(autoincrement())
  goalsScored      Int?    @default(0)
  shotsOnTarget    Int?    @default(0)
  shotsOffTarget   Int?    @default(0)
  shotsTaken       Int?    @default(0)
  passesCompleted  Int?    @default(0)
  passesIncomplete Int?    @default(0)
  cornersTaken     Int?    @default(0)
  freeKicks        Int?    @default(0)
  redCards         Int?    @default(0)
  yellowCrads      Int?    @default(0)
  offSides         Int?    @default(0)
  fouls            Int?    @default(0)
  penalties        Int?    @default(0)
  penaltiesScored  Int?    @default(0)
  penaltiesMissed  Int?    @default(0)
  seasonId         String?
  playerId         Int?
  player           player? @relation(fields: [playerId], references: [id], map: "SeasonPlayerStats_playerId_fkey")
  season           season? @relation(fields: [seasonId], references: [id], map: "SeasonPlayerStats_seasonId_fkey")

  @@index([playerId], map: "SeasonPlayerStats_playerId_fkey")
  @@index([seasonId], map: "SeasonPlayerStats_seasonId_fkey")
}

model seasonteamstats {
  id                   Int     @id @default(autoincrement())
  goalsScored          Int?    @default(0)
  possessionPercentage Int?    @default(0)
  shotsOnTarget        Int?    @default(0)
  shotsOffTarget       Int?    @default(0)
  shotsTaken           Int?    @default(0)
  passesCompleted      Int?    @default(0)
  passesIncomplete     Int?    @default(0)
  cornersTaken         Int?    @default(0)
  freeKicks            Int?    @default(0)
  redCards             Int?    @default(0)
  yellowCrads          Int?    @default(0)
  offSides             Int?    @default(0)
  fouls                Int?    @default(0)
  penalties            Int?    @default(0)
  penaltiesScored      Int?    @default(0)
  penaltiesMissed      Int?    @default(0)
  teamId               Int?
  seasonId             String?
  draws                Int?    @default(0)
  losses               Int?    @default(0)
  points               Int?    @default(0)
  wins                 Int?    @default(0)
  season               season? @relation(fields: [seasonId], references: [id], map: "SeasonTeamStats_seasonId_fkey")
  team                 team?   @relation(fields: [teamId], references: [id], map: "SeasonTeamStats_teamId_fkey")

  @@index([seasonId], map: "SeasonTeamStats_seasonId_fkey")
  @@index([teamId], map: "SeasonTeamStats_teamId_fkey")
}

model team {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(255)
  nickname        String?           @db.VarChar(255)
  headCoach       String?           @db.VarChar(255)
  stadiumName     String?           @db.VarChar(255)
  city            String?           @db.VarChar(255)
  logoImg         Bytes?
  gameteamstats   gameteamstats[]
  leagueteamstats leagueteamstats[]
  player          player[]
  seasonteamstats seasonteamstats[]
}
